<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	
	<!-- UrlBasedViewResolver 클래스를 Spring Bean으로 등록 -->
	<!-- UrlBasedViewResolver : Spring Framework에서 제공하는 ViewResolver가 아닌 외부에서
	제공하는 ViewResolver를 이용하여 응답 처리하기 위한 기능을 제공하는 객체 -->
	<beans:bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<!-- viewClass 필드에 외부에서 제공하는 ViewResolver 클래스(TilesView)를 인젝션 처리 -->
		<beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView"/>
		<!-- order 필드에 ViewResolver 사용에 대한 우선순위 관련 정수값을 인젝션 처리 -->
		<!-- => 정수값이 낮을수록 우선순위가 높게 설정 -->
		<beans:property name="order" value="2"/>
	</beans:bean>
	
	<!-- TilesConfigurer 클래스를 Spring Bean으로 등록 -->
	<!-- TilesConfigurer : Tiles 프로그램에서 사용할 템플릿 페이지 정보가 저장된 XML 파일
	(Tiles Configuration File)을 저장하기 위한 객체 -->
	<beans:bean class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<!-- definitions 필드에 List 객체를 생성하여 인젝션 처리 -->
		<!-- => List 객체의 요소로 Tiles Configuration File의 경로를 추가 -->
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/spring/appServlet/tiles.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="3"/>
	</beans:bean>
	
	<!-- component-scan : Spring 어노테이션을 사용한 클래스가 작성된 패키지를 설정하는 엘리먼트 -->
	<!-- => 패키지에 작성된 클래스의 어노테이션을 Spring Container가 처리 -->
	<!-- <context:component-scan base-package="xyz.itwill.controller" /> -->
	<context:component-scan base-package="com.myBank.dao" />
	<context:component-scan base-package="com.myBank.service" />
	<context:component-scan base-package="com.myBank.controller" />
	
	<!-- 인터셉터 클래스를 Spring Bean으로 등록 -->
	<beans:bean class="com.myBank.util.AdminAuthInterceptor" id="adminAuthInterceptor"/>
	<beans:bean class="com.myBank.util.LoginAuthInterceptor" id="loginAuthInterceptor"/>
	
	<!-- interceptors : 인터셉터를 설정하기 위한 상위 엘리먼트 -->
	<interceptors>
		<!-- interceptor : 인터셉터를 등록하기 위한 엘리먼트 -->
		<interceptor>
			<!-- mapping : 인터셉터가 동작될 요청 URL 주소의 패턴을 등록하는 엘리먼트 -->
			<!-- path 속성 : 요청 URL 주소의 패턴을 속성값으로 설정 -->
			<mapping path="/userinfo/join"/>
			<mapping path="/userinfo/modify"/>
			<mapping path="/userinfo/remove"/>
			<!-- ref : 클라이언트 요청에 의해 동작될 인터셉터 클래스의 Spring Bean를 설정하는 엘리먼트 -->
			<!-- bean 속성 : 인터셉터 클래스의 beanName를 속성값으로 설정 -->
			<beans:ref bean="adminAuthInterceptor"/>
		</interceptor>
		
		<interceptor>
			<!-- * : 현재 폴더의 모든 페이지, ** : 현재 폴더와 하위 폴더의 모든 페이지 -->
			<!-- <mapping path="/userinfo/*"/> -->
			<!-- <mapping path="/userinfo/li*"/> -->
			
			<!-- <mapping path="/userinfo/**"/> -->
			<!-- exclude-mapping : 인터셉터를 사용하지 않는 요청 URL 주소의 패턴을 설정하는 엘리먼트 -->
			<!-- <exclude-mapping path="/userinfo/login"/> -->
			
			<mapping path="/userinfo/list"/>
			<mapping path="/userinfo/view"/>
			<beans:ref bean="loginAuthInterceptor"/> 
		</interceptor>
	</interceptors>
	
</beans:beans>
